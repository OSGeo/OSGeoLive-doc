# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011~2022, OSGeo
# This file is distributed under the same license as the OSGeoLive package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OSGeoLive 17.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-28 12:38+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:28
msgid "MapServer Quickstart"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:30
msgid "MapServer is an `Open Source <https://opensource.org/>`_ server based application that allows you to publish geographic map images and vector data through the Internet using |OGCS| such as |WMS|, |WFS| and |WCS|."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:38
msgid "Contents"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:41
msgid "Configure MapServer using the Mapfile configuration file"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:45
msgid "**What will I learn ?** In this section, you will learn what a Mapfile is and how to configure it to allow MapServer to serve a shapefile as images using WMS requests."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:50
msgid "What is a Mapfile ?"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:52
msgid "The `Mapfile <https://mapserver.org/mapfile/index.html>`_ is the configuration file that MapServer uses to render geospatial data as images or vector data. Its main purpose is to define the layers it can draw, how to read necessary data, and how to render it (e.g. color, symbol, label, etc...)."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:58
msgid "Creating my first Mapfile"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:60
msgid "Open any text editor (e.g. :menuselection:`Accessories --> FeatherPad`)."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:62
msgid "Create the file \"mapserver_quickstart.map\" at the following location: :file:`/home/user/mapserver_quickstart.map`"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:66
msgid "Put the following content in it::"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:106
msgid "The example uses the natural earth dataset, which is already on OSGeoLive at :file:`~/data/natural_earth2` (a short cut to :file:`/usr/local/share/data/natural_earth2`)."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:109
msgid "Each object in a Mapfile starts with its name (for example **MAP**) and ends with an **END**. A Mapfile always starts with the **MAP** object and should contain a list of **LAYER** objects the Mapfile can read and draw. In our Mapfile, we currently have only one layer defined."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:114
msgid "Let's take a look at some of the objects (and properties) defined in our Mapfile:"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:117
msgid "EXTENT: sets the default geospatial bounding box for this configuration."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:118
msgid "LAYER: defines access and display properties for a spatial dataset. We'll add another layer later."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:120
msgid "SHAPEPATH: sets a base path for file-based data (e.g. shapefiles or GeoTIFF images)."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:123
msgid "If we look closer at the **LAYER** in our Mapfile, we'll see that it contains a bunch of properties and objects too. Among them are:"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:126
msgid "STATUS: defines whether the layer can be drawn (*ON*), can't be drawn (*OFF*) or is always drawn (*DEFAULT*)."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:128
msgid "TYPE: the geometry type that MapServer should use when rendering the data as an image. In our Mapfile, the data will be drawn as *polygons*."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:130
msgid "DATA: the name of the spatial data file this layer uses, in this case a shapefile."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:132
msgid "CLASS: determines how to draw a layer (styling). We'll cover this object in more detail later."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:137
msgid "A complete list of the available objects and properties a Mapfile can have can be found in the `MapServer documentation page <https://mapserver.org/mapfile/index.html>`_."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:143
msgid "Render a map image with MapServer using a WMS **GetMap** request"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:147
msgid "**What will I learn ?** You will learn how to use to render an image with layers from a Mapfile with MapServer using an OGC WMS request."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:150
msgid "Open a web browser and enter the following URL::"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:154
msgid "What does the above mean? If we put it in simple words, it's a |WMS| **GetMap** request that tells MapServer to \"*use the following Mapfile to render the specified layers as a png image based on some user-supplied parameters such as image size, geographical extent, projection, etc.*\". All layers specified in the \"*&LAYERS=...*\" property having *STATUS ON* in the Mapfile will be rendered in addition to all layers with *STATUS DEFAULT*. The result looks like the following:"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:168
msgid "All parameters of the request are WMS-specific, except \"*?map=/home/user/mapserver_quickstart.map*\", which is MapServer-specific."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:174
msgid "Render a map image with MapServer using the command line"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:176
msgid "Although MapServer is geared towards web applications, it can also produce images on the command line. This can be useful if you are looking for repetitive mapping, or while debugging."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:180
msgid "Open a terminal (:menuselection:`System Tools --> QTerminal`) and type::"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:184
msgid "If this command runs successfully, you are able to see your rendered map at file:///home/user/Documents/mymap.png."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:189
msgid "Add a new layer to the Mapfile to serve a local Shapefile"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:193
msgid "**What will I learn ?** You will learn how to add a new layer object definition to your Mapfile."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:196
msgid "We will now add a new layer to our Mapfile. Before the last *END* statement in the Mapfile, add the following layer configuration::"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:211
msgid "Now we have 2 layer definitions in our Mapfile. Note that the new one we just added has the \"STATUS\" property set to \"ON\". That means that unless we specifically request it, it won't be rendered."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:215
msgid "Let's take our previous WMS **GetMap** request and add our new \"Lakes\" layer to the image rendered. We simply need to add the new layer name to the \"LAYERS\" property list::"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:221
msgid "The image rendered by MapServer looks like our previous map, but with the addition of the lakes from our new layer:"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:230
msgid "Style a layer using Mapfile configurations"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:234
msgid "**What will I learn ?** You will see an example of styling elements inside a layer depending on some of its data properties."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:237
msgid "In a Mapfile, a LAYER object can contain an infinite number of CLASS objects. These are used to style the elements contained in the spatial data file (DATA). For example, if we look closer at our \"ne_10m_lakes\" data file using a tool such as `ogrinfo <https://gdal.org/en/latest/programs/ogrinfo.html>`_, we'll see the geometry and attribute definitions it contains. These attribute values can be used as a way to draw the elements inside a dataset differently using multiple CLASS objects."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:245
msgid "In our \"ne_10m_lakes\" dataset, we have a *ScaleRank* attribute, which defines the significance of the lakes. We can use this as a way to render the lakes differently. In the LAYER object, we'll add another CLASS object just before our current one::"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:270
msgid "What does our new CLASS object do? It basically tells MapServer to draw the elements having the \"ScaleRank\" property equal to \"0\" or \"1\" with a black outline. Class objects are always read from the top to the bottom for each feature to be drawn. When a feature matches the \"EXPRESSION\" specified in a class, that class is going to render the feature. If the feature does not match a class the next class is checked. If a feature does not match any class then it is not rendered at all but if the last class in a layer contains no EXPRESSION then that class acts as a default. The LAYER \"CLASSITEM\" property tells MapServer which attribute to use when evaluating EXPRESSIONs defined in the CLASS objects."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:281
msgid "The result of this new addition should make the big lakes in our map image rendered with a black outline:"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:289
msgid "Learn more about `EXPRESSIONS <https://mapserver.org/mapfile/expressions.html>`_ in MapServer."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:294
msgid "Publish your data as OGC WMS (Web Map Service)"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:296
msgid "MapServer supports different OGC Standards like OGC WMS, WFS or WCS. With OGC WMS you can publish your data as a Map Service and integrate the service in a Desktop GIS like QGIS or in a Web Client like OpenLayers or Mapbender."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:299
msgid "Using QGIS Desktop to load your OGC WMS"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:301
msgid "Start QGIS via |menu_qgis|"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:303
msgid "Go to :menuselection:`Layer --> Add Layer --> Add WMS/WMTS Layer`."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:305
msgid "Click button **New** and add a name and your Service URL"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:307
msgid "Save your settings:"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:309
msgid "http://localhost/cgi-bin/mapserv?map=/home/user/mapserver_quickstart.map&SERVICE=WMS&REQUEST=GetCapabilities&VERSION=1.3.0"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:311
msgid "Then you can connect to your service and add one or more layers of the service to your QGIS project. If you choose the layer with the ID 0 you can load the whole service with all layers at once."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:318
msgid "What next?"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:320
msgid "This is a simple example, but you can do much, much more. The MapServer project website contains many resources to help you get started. Here's a few resources to check out next:"
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:324
msgid "Read the `Introduction to MapServer <https://mapserver.org/introduction.html#introduction>`_."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:326
msgid "Run through the `Getting Started with MapServer workshop <https://geographika.github.io/getting-started-with-mapserver/>`_."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:328
msgid "Have a look at the `MapServer Tutorial <https://www.mapserver.org/tutorial/index.html>`_ which contains more Mapfile examples."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:331
msgid "Check the `OGC Support and Configuration <https://www.mapserver.org/ogc/index.html>`_ to learn more about OGC standards in MapServer (WMS, WFS, SLD, WFS Filter Encoding, WCS, SOS, etc.)."
msgstr ""

#: ../../build/doc/quickstart/mapserver_quickstart.rst:334
msgid "Ready to use MapServer? Then join the community on the `Mailing Lists <https://www.mapserver.org/community/lists.html>`_ to exchange ideas, discuss potential software improvements and ask questions."
msgstr ""

#: ../../build/doc/<rst_epilog>:11
msgid "vmdk"
msgstr ""

#: ../../build/doc/<rst_epilog>:14
msgid "nologo"
msgstr ""

#: ../../build/doc/<rst_epilog>:0
msgid "OSGeo Project"
msgstr ""

#: ../../build/doc/<rst_epilog>:0
#: ../../build/doc/<rst_epilog>:0
msgid "OSGeo Community"
msgstr ""
