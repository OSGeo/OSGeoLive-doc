# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011~2018, OSGeo
# This file is distributed under the same license as the OSGeoLive package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
# 
# Translators:
# MarPetra <mvergaratrejo@gmail.com>, 2019
# Celia Virginia Vergara Castillo <vicky@georepublic.de>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OSGeoLive 13.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-11 09:43-0500\n"
"PO-Revision-Date: 2017-09-20 16:06+0000\n"
"Last-Translator: Celia Virginia Vergara Castillo <vicky@georepublic.de>, 2019\n"
"Language-Team: Spanish (https://www.transifex.com/osgeo/teams/66156/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../build/doc/quickstart/pywps_quickstart.rst:19
msgid "PyWPS Quickstart"
msgstr "Inicio Rápido PyWPS"

#: ../../build/doc/quickstart/pywps_quickstart.rst:21
msgid ""
"PyWPS is an OGC WPS (Web Processing Service 1.0.0) server implementation "
"written in `Python <http://python.org>`_."
msgstr ""
"PyWPS es una implementación de servidor OGC WPS (Web Processing Service "
"1.0.0) escrita en Python <http://python.org>`_."

#: ../../build/doc/quickstart/pywps_quickstart.rst:24
msgid ""
"The PyWPS 4.0.0 library is installed by default on OSGeo-Live. This is a "
"core library that is not intended to be executed directly, but rather to be "
"used in the development of WPS services. An `example service "
"<https://github.com/geopython/pywps-flask>`_ based on `Flask "
"<http://flask.pocoo.org/>`_ is available at GitHub to facilitate a first "
"contact with PyWPS."
msgstr ""
"La biblioteca PyWPS 4.0.0 se instala de manera predeterminada en OSGeoLive. "
"Esta es una biblioteca central que no está destinada a ejecutarse "
"directamente, sino a utilizarse en el desarrollo de servicios WPS. Un "
"`ejemplo de servicio <https://github.com/geopython/pywps-flask>`_  basado "
"`Flask <http://flask.pocoo.org/>`_ está disponible en GitHub para facilitar "
"un primer contacto con PyWPS."

#: ../../build/doc/quickstart/pywps_quickstart.rst:30
msgid "This Quickstart describes how to:"
msgstr "Esta Guía de Inicio Rápido describe cómo:"

#: ../../build/doc/quickstart/pywps_quickstart.rst:32
msgid "Install and configure the pywps-flask example service"
msgstr "Instalar y configurar el servicio de ejemplo de pywps-flask"

#: ../../build/doc/quickstart/pywps_quickstart.rst:33
msgid ""
"Perform ``GetCapabilities``, ``DescribeProcess`` and ``Execute`` requests"
msgstr ""
"Realizar requerimientos de ``GetCapabilities``, ``DescribeProcess``  y "
"``Execute``"

#: ../../build/doc/quickstart/pywps_quickstart.rst:34
msgid "Develop your own WPS processes"
msgstr "Desarrollar sus propios procesos WPS"

#: ../../build/doc/quickstart/pywps_quickstart.rst:35
msgid "Next steps"
msgstr "Pasos a seguir"

#: ../../build/doc/quickstart/pywps_quickstart.rst:40
msgid "Installing pywps-flask"
msgstr "Instalación de pywps-flask"

#: ../../build/doc/quickstart/pywps_quickstart.rst:42
msgid ""
"Since the example service depends on Flask, make sure it is installed on "
"your OSGeo-Live:"
msgstr ""
"Dado que el servicio de ejemplo depende de Flask, asegúrese de que esté "
"instalado en su OSGeoLive:"

#: ../../build/doc/quickstart/pywps_quickstart.rst:45
msgid "`sudo apt install python-flask`"
msgstr "`sudo apt install python-flask`"

#: ../../build/doc/quickstart/pywps_quickstart.rst:47
msgid "Then clone the repository from GitHub:"
msgstr "Luego clonar el repositorio de GitHub:"

#: ../../build/doc/quickstart/pywps_quickstart.rst:49
msgid "`git clone https://github.com/geopython/pywps-flask.git`"
msgstr "`git clone https://github.com/geopython/pywps-flask.git`"

#: ../../build/doc/quickstart/pywps_quickstart.rst:51
msgid ""
"Now move into the repository folder and edit the configuration file. This "
"can be done with a program like `nano`:"
msgstr ""
"Ahora muévase a la carpeta del repositorio y edite el archivo de "
"configuración. Esto se puede hacer con un programa como `nano`:"

#: ../../build/doc/quickstart/pywps_quickstart.rst:54
msgid "`nano pywps.cfg`"
msgstr "`nano pywps.cfg`"

#: ../../build/doc/quickstart/pywps_quickstart.rst:56
msgid ""
"The only critical thing to verify is the location of logging database. "
"`Pywps-flask` provides a sample SQLite database that can be used for this "
"purpose. Make sure the `database` setting reads like:"
msgstr ""
"Lo único crítico para verificar es la ubicación de la base de datos de "
"registro. `Pywps-flask` proporciona una base de datos SQLite de muestra que "
"se puede utilizar para este propósito. Asegúrese de que la configuración de "
"la` base de datos` se lea como:"

#: ../../build/doc/quickstart/pywps_quickstart.rst:60
msgid "`database=sqlite:////home/user/pywps-flask/logs/pywps-logs.sqlite3`"
msgstr "`database=sqlite:////home/user/pywps-flask/logs/pywps-logs.sqlite3`"

#: ../../build/doc/quickstart/pywps_quickstart.rst:62
msgid ""
"Save the configuration file and exit `nano` you can now run the service:"
msgstr ""
"Guardar el archivo de configuración y salir de `nano`  ahora puede ejecutar "
"el servicio:"

#: ../../build/doc/quickstart/pywps_quickstart.rst:64
msgid "`python demo.py`"
msgstr "`python demo.py`"

#: ../../build/doc/quickstart/pywps_quickstart.rst:66
msgid "If all goes well you will receive back a message like:"
msgstr "Si todo sale bien usted recibirá nuevamente un mensaje como:"

#: ../../build/doc/quickstart/pywps_quickstart.rst:68
msgid "`* Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)`"
msgstr "`* Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)`"

#: ../../build/doc/quickstart/pywps_quickstart.rst:71
msgid "Testing available processes"
msgstr "Pruebas de procesos disponibles"

#: ../../build/doc/quickstart/pywps_quickstart.rst:73
msgid ""
"Open your favourite web browser and point it to the address where the "
"example service is listening: `http://127.0.0.1:5000/ "
"<http://127.0.0.1:5000/>`_ You will be presented with the following page:"
msgstr ""
"Abra su navegador web favorito y apúntelo a la dirección donde escucha el "
"servicio de ejemplo: `http://127.0.0.1:5000/ <http://127.0.0.1:5000/>`_ y se"
" le presentará la siguiente página:"

#: ../../build/doc/quickstart/pywps_quickstart.rst:80
msgid ""
"Use the green buttons to explore the service. Issue a `GetCapabilities` "
"request for an overview of the service; issue a `DescribeProcess` request to"
" learn the details of a particular project. Note the request URL in the "
"browser address."
msgstr ""
"Use los botones verdes para explorar el servicio. Emitir una solicitud "
"`GetCapabilities` para obtener una descripción general del servicio; emitir "
"una solicitud `DescribeProcess` para conocer los detalles de un proyecto en "
"particular. Observe la URL de solicitud en la dirección del navegador."

#: ../../build/doc/quickstart/pywps_quickstart.rst:84
msgid ""
"It is now time to test an `Execute` request. You can try the `say_hello` "
"process, which is fairly simple. Direct your web browser to the following "
"address:"
msgstr ""
"hora es el momento de probar una solicitud de  `Execute` . Puede probar el "
"proceso `say_hello` , que es bastante simple. Dirija su navegador web a la "
"siguiente dirección: "

#: ../../build/doc/quickstart/pywps_quickstart.rst:88
msgid ""
"`http://localhost:5000/wps?service=WPS&version=1.0.0&request=Execute&identifier=say_hello&dataInputs=name"
"=OSGeo-Live`"
msgstr ""
"`http://localhost:5000/wps?service=WPS&version=1.0.0&request=Execute&identifier=say_hello&dataInputs=name"
"=OSGeo-Live`"

#: ../../build/doc/quickstart/pywps_quickstart.rst:90
msgid ""
"The process simply replies back with a \"Hello OSGeo\" message, encoded in a"
" standard WPS response document. Your browser should be showing something "
"like:"
msgstr ""
"El proceso simplemente responde con un mensaje de \"Hello OSGeo\", "
"codificado en un documento de respuesta WPS estándar. Su navegador debería "
"mostrar algo como:"

#: ../../build/doc/quickstart/pywps_quickstart.rst:97
msgid "Developing WPS processes"
msgstr "Desarrollo de procesos de WPS"

#: ../../build/doc/quickstart/pywps_quickstart.rst:99
msgid ""
"To develop new processes all you need to do is create new Python modules "
"inside the `processes` folder. Use the existing processes as templates to "
"help you structure your code. A closer look at the `say_hello` process shows"
" the main feature of a PyWPS process:"
msgstr ""
"Para desarrollar nuevos procesos, todo lo que necesita hacer es crear nuevos"
" módulos de Python dentro de la carpeta de procesos . Use los procesos "
"existentes como plantillas para ayudarlo a estructurar su código. Una mirada"
" más cercana al proceso `say_hello` muestra la característica principal de "
"un proceso PyWPS:"

#: ../../build/doc/quickstart/pywps_quickstart.rst:104
msgid ""
"1. Import the necessary assets and create a class inheriting from the PyWPS "
"`Process` class. In the constructor create the necessary objects for inputs "
"and outputs:"
msgstr ""
"1. mporte los activos necesarios y cree una clase heredada de la clase "
"`Process` de PyWPS. En el constructor, crear los objetos necesarios para "
"entradas y salidas:"

#: ../../build/doc/quickstart/pywps_quickstart.rst:119
msgid "Invoke the parent constructor, passing on the metadata of the process:"
msgstr ""
"Invocar el constructor del padre, pasando en los metadatos del proceso:"

#: ../../build/doc/quickstart/pywps_quickstart.rst:136
msgid ""
"3. Create the `handler` method, that will be invoked to handle `Execute` "
"requests. Use the `request` and `response` objects to retrieve inputs and "
"set outputs."
msgstr ""
"3. Crear el método del controlador, que se invocará para manejar las "
"solicitudes de ejecución. Utilice los objetos de solicitud y respuesta para "
"recuperar entradas y establecer salidas."

#: ../../build/doc/quickstart/pywps_quickstart.rst:149
msgid "What's Next"
msgstr "¿Qué sigue?"

#: ../../build/doc/quickstart/pywps_quickstart.rst:151
msgid ""
"PyWPS gives you the freedom and flexibility to write your own Python "
"processes and expose them accordingly."
msgstr ""
"PyWPS le da la libertad y flexibilidad para escribir sus propios procesos de"
" Python y exponerlos en consecuencia."

#: ../../build/doc/quickstart/pywps_quickstart.rst:155
msgid "Official documentation"
msgstr "Documentación oficial"

#: ../../build/doc/quickstart/pywps_quickstart.rst:157
msgid ""
"For further information on PyWPS configuration and the API, consult the "
"`documentation`_ on the PyWPS website."
msgstr ""
"Para más información sobre configuración de PyWPS y la API, consulte  la "
"`documentation`_  en la Página Web de PyWPS."

#: ../../build/doc/quickstart/pywps_quickstart.rst:160
msgid "Tutorial"
msgstr "Tutorial"

#: ../../build/doc/quickstart/pywps_quickstart.rst:162
msgid ""
"Try out the `workshop`_, a tutorial used in workshops to introduce new users"
" to PyWPS 4."
msgstr ""
"Pruebe el `workshop`_, un tutorial que se utiliza en talleres para "
"introducir a nuevos usuarios a PyWPS 4."

#: ../../build/doc/quickstart/pywps_quickstart.rst:166
msgid "Deployment to production"
msgstr "Despliegue a producción"

#: ../../build/doc/quickstart/pywps_quickstart.rst:168
msgid ""
"The `pywps-flask` service is just an example and not designed for "
"production. One possible alternative is a Django based service, `pywps-"
"django <https://github.com/jorgejesus/pywps-django>`_. The documentation "
"provides further details on how to `set up a production service "
"<http://pywps.readthedocs.io/en/latest/deployment.html>`_ with `Apache "
"<https://httpd.apache.org/>`_ or `nginx <https://nginx.org/>`_ and `Gunicorn"
" <http://gunicorn.org/>`_."
msgstr ""
"El servicio `pywps-flask` es solo un ejemplo y no está diseñado para la "
"producción. Una alternativa posible es un servicio basado en Django,  "
"`pywps-django <https://github.com/jorgejesus/pywps-django>`_. La "
"documentación proporciona más detalles sobre cómo `configurar un servicio de"
" producción <http://pywps.readthedocs.io/en/latest/deployment.html>`_ con "
"`Apache <https://httpd.apache.org/>`_ o `nginx <https://nginx.org/>`_ y "
"`Gunicorn <http://gunicorn.org/>`_."
